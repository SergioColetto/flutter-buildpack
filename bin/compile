#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e
unset GIT_DIR

function print() {
  echo "-----> $1"
}

# Taken from https://devcenter.heroku.com/articles/buildpack-api#bin-compile-summary
function export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
        export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

# Taken from https://devcenter.heroku.com/articles/buildpack-api#style
function indent() {
  sed -u 's/^/       /'
}

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}

export_env_dir "$3"

# Create the cache directory if not exist.
mkdir -p $CACHE_DIR

cd $BUILD_DIR

curl -o- https://puro.dev/install.sh | PURO_VERSION="1.4.5" bash
/app/.puro/bin/puro upgrade-puro

if [ -d $BUILD_DIR/app/.puro/envs/stable/flutter/bin/flutter ]; then
  /app/.puro/envs/stable/flutter/bin/flutter --machine --version > flutter.json
  FLUTTER_INSTALLED_VERSION=$(grep -o '"frameworkVersion": *"[^"]*' flutter.json | grep -o '[^"]*$')
  if [ "$FLUTTER_VERSION" != "$FLUTTER_INSTALLED_VERSION" ]; then
    print "Installing Flutter SDK version: $FLUTTER_VERSION"
    /app/.puro/bin/puro create stable $FLUTTER_VERSION
    /app/.puro/bin/puro use -g stable
  fi
  rm flutter.json
else
  print "Installing SDK Flutter from PURO.DEV $FLUTTER_VERSION"
  /app/.puro/bin/puro create stable $FLUTTER_VERSION
  /app/.puro/bin/puro use -g stable
fi

print "Enabling Web support"
/app/.puro/bin/puro flutter config --enable-web --quiet | indent

print "Running flutter clean command."
/app/.puro/bin/puro flutter clean --quiet | indent

print "Getting packages from Flutter project"
/app/.puro/bin/puro flutter pub get | indent

if [ -z "$FLUTTER_BUILD" ]; then
  FLUTTER_BUILD="/app/.puro/bin/puro flutter build web --release --dart-define-from-file=env.produk.json --quiet"
fi

print "Compiling the project with $FLUTTER_BUILD"
eval $FLUTTER_BUILD | indent
PATH="$PATH":"$(pwd)/.puro/envs/stable/flutter/bin/"

#  To read hidden directories and use move with exclusion.
shopt -s extglob

print "Getting dart_server_httpd to run web service."
/app/.puro/bin/puro dart pub global activate -sgit https://github.com/SergioColetto/dart_server_httpd.git | indent

print "Compiling the project with $FLUTTER_BUILD"
eval $FLUTTER_BUILD | indent

PUB_CACHE="$HOME/.pub-cache"
mkdir -p $PUB_CACHE

mkdir -p $CACHE_DIR/.pub-cache/
cp -R $PUB_CACHE/* $CACHE_DIR/.pub-cache/

cp -R $PUB_CACHE $BUILD_DIR

export PATH="$PATH":"/app/dart-sdk/bin/"
export PATH="$PATH":"/app/.pub-cache/bin"
